{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"EPI Research Team Documentation This is documentation for the EPI Research Team. It is probably only interesting if you work at EPI , but some of the Stata and R code might be useful for others. Contributing changes Clone the Github repo and submit changes via a pull request on a new branch. See here for details.","title":"Home"},{"location":"#epi-research-team-documentation","text":"This is documentation for the EPI Research Team. It is probably only interesting if you work at EPI , but some of the Stata and R code might be useful for others.","title":"EPI Research Team Documentation"},{"location":"#contributing-changes","text":"Clone the Github repo and submit changes via a pull request on a new branch. See here for details.","title":"Contributing changes"},{"location":"contributions/","text":"Contribute documentation To contribute, use the Github repo and submit changes with pull requests. Install MkDocs We build the documentation from markdown files using MkDocs and some related python modules. If you haven't already installed MkDocs, use pip to install mkdocs mkdocs-material pymdown-extensions For example, on our server maynard open a terminal and type pip3 install mkdocs mkdocs-material pymdown-extensions --user Build the docs locally Clone the repo and use mkdocs serve on the raw files to build and view the website locally: git clone git@github.com:Economic/research_docs.git cd research_docs mkdocs serve Then open up http://127.0.0.1:8000/ in your browser to view your local version of the website. File structure The repo has the following general structure: docs/ - index.md - otherfile.md subdirectory1/ - file.md mkdocs.yml All of the site's pages are built from markdown files in docs/ directory. This is where you will edit or add content. mkdocs.yml is the MkDocs configuration file that specifies the theme and other site-wide options. If you are just editing or adding pages, you likely don't need to worry about this file. Editing content Create a separate branch. Edit or add .md files in the docs/ directory. Confirm the site looks the way you want locally. Commit changes and push them to github. Submit a pull request.","title":"Contributions"},{"location":"contributions/#contribute-documentation","text":"To contribute, use the Github repo and submit changes with pull requests.","title":"Contribute documentation"},{"location":"contributions/#install-mkdocs","text":"We build the documentation from markdown files using MkDocs and some related python modules. If you haven't already installed MkDocs, use pip to install mkdocs mkdocs-material pymdown-extensions For example, on our server maynard open a terminal and type pip3 install mkdocs mkdocs-material pymdown-extensions --user","title":"Install MkDocs"},{"location":"contributions/#build-the-docs-locally","text":"Clone the repo and use mkdocs serve on the raw files to build and view the website locally: git clone git@github.com:Economic/research_docs.git cd research_docs mkdocs serve Then open up http://127.0.0.1:8000/ in your browser to view your local version of the website.","title":"Build the docs locally"},{"location":"contributions/#file-structure","text":"The repo has the following general structure: docs/ - index.md - otherfile.md subdirectory1/ - file.md mkdocs.yml All of the site's pages are built from markdown files in docs/ directory. This is where you will edit or add content. mkdocs.yml is the MkDocs configuration file that specifies the theme and other site-wide options. If you are just editing or adding pages, you likely don't need to worry about this file.","title":"File structure"},{"location":"contributions/#editing-content","text":"Create a separate branch. Edit or add .md files in the docs/ directory. Confirm the site looks the way you want locally. Commit changes and push them to github. Submit a pull request.","title":"Editing content"},{"location":"infrastructure/","text":"Infrastructure Servers Server name OS Point of contact epi-sas Windows ITonDemand epi07 Windows ITonDemand maynard Linux Zane/Ben Desktops","title":"Infrastructure"},{"location":"infrastructure/#infrastructure","text":"","title":"Infrastructure"},{"location":"infrastructure/#servers","text":"Server name OS Point of contact epi-sas Windows ITonDemand epi07 Windows ITonDemand maynard Linux Zane/Ben","title":"Servers"},{"location":"infrastructure/#desktops","text":"","title":"Desktops"},{"location":"Project_Management/organization/","text":"where to store stuff organizing code github archiving","title":"Organization"},{"location":"Project_Management/organization/#where-to-store-stuff","text":"","title":"where to store stuff"},{"location":"Project_Management/organization/#organizing-code","text":"","title":"organizing code"},{"location":"Project_Management/organization/#github","text":"","title":"github"},{"location":"Project_Management/organization/#archiving","text":"","title":"archiving"},{"location":"RA_Jobs/jobsday/","text":"jobs day","title":"Jobsday"},{"location":"examples/nominal_wagegrowth_p50/","text":"Median hourly nominal wage growth in the CPS-ORG Stata * load the data load_epiextracts, begin(1979m1) end (2019m9) sample (org) keep (wage) * keep only wage earners keep if wage > 0 & wage != . * create a quarterly time variable gen quarterdate = qofd ( dofm ( ym (year,month))) format %tq quarterdate * calculate smoothed (and classical medians) binipolate wage [pw=orgwgt], by (quarterdate) collapsefun(gcollapse) binsize( 0.25 ) * create 4-quarter changes and graph the results tsset quarterdate gen Dwage_binned = p50_binned / L4 . p50_binned - 1 scatter Dwage_binned quarterdate, connect(l) mfcolor(none) graph export qwagegrowth . pdf, replace","title":"Median hourly nominal wage growth in the CPS-ORG"},{"location":"examples/nominal_wagegrowth_p50/#median-hourly-nominal-wage-growth-in-the-cps-org","text":"Stata * load the data load_epiextracts, begin(1979m1) end (2019m9) sample (org) keep (wage) * keep only wage earners keep if wage > 0 & wage != . * create a quarterly time variable gen quarterdate = qofd ( dofm ( ym (year,month))) format %tq quarterdate * calculate smoothed (and classical medians) binipolate wage [pw=orgwgt], by (quarterdate) collapsefun(gcollapse) binsize( 0.25 ) * create 4-quarter changes and graph the results tsset quarterdate gen Dwage_binned = p50_binned / L4 . p50_binned - 1 scatter Dwage_binned quarterdate, connect(l) mfcolor(none) graph export qwagegrowth . pdf, replace","title":"Median hourly nominal wage growth in the CPS-ORG"}]}